{"version":3,"sources":["components/Nav.js","components/PasswordGenerator.js","helpers/helpHttp.js","components/DataForm.js","components/DataTableRow.js","components/DataTable.js","components/Loader.js","components/Message.js","components/RandomPassword.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","PasswordGenerator","props","state","password","generar","bind","Math","round","random","letters","letter","length","console","log","array","number","this","randomNumbers","randomLetters","i","setState","onClick","Component","helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","err","status","statusText","catch","get","url","post","put","del","initialForm","id","site","username","DataForm","createData","updateData","dataToEdit","setDataToEdit","useState","form","setForm","useEffect","handleChange","e","target","name","value","handleReset","onSubmit","preventDefault","alert","type","placeholder","onChange","DataTableRow","el","deleteData","DataTable","data","map","colSpan","Loader","Message","msg","styles","padding","marginBottom","textAling","color","fontWeight","backgroundColor","bgColor","style","RandomPassword","db","setDb","error","setError","loading","setLoading","api","Date","now","endPoint","newData","window","confirm","filter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.653915e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Nav(){\r\n\r\n    return (\r\n        <div className=\"conteiner-nav\">\r\n        <div className=\"box-nav\">\r\n        <div className=\"nav\">\r\n            <h1>Random Password</h1>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Nav;","import React, {Component} from \"react\";\r\n\r\n\r\nexport default class PasswordGenerator extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n       this.state = {\r\n            password: [0],\r\n        };\r\n\r\n        this.generar = this.generar.bind(this);\r\n    }\r\n\r\n\r\n    //  return a random number lower of 99\r\n    randomNumbers(){\r\n        let number = 0;\r\n        number = (Math.round(Math.random()*9));\r\n\r\n        return number;\r\n    }\r\n\r\n    // return a letter between a ~ z\r\n    randomLetters(){\r\n\r\n        let letters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"ñ\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\r\n\r\n        let letter = letters[(Math.round(Math.random()*(letters.length-1)))]\r\n        console.log(letter);\r\n\r\n        return letter;\r\n\r\n    }\r\n\r\n\r\n    generar(){\r\n        let array = [];\r\n        let number = this.randomNumbers();\r\n        let letter = this.randomLetters();\r\n\r\n        for(let i = 0; i<=7; i++){\r\n\r\n            // array.push(number);\r\n            // array.push(letter);\r\n            array[i] = number;\r\n            i++;\r\n            array[i] = letter;\r\n            number = this.randomNumbers();\r\n            letter = this.randomLetters();\r\n            \r\n            console.log(array.length);\r\n        }\r\n            \r\n       \r\n        console.log(array);\r\n     \r\n           \r\n\r\n\r\n       \r\n\r\n\r\n        this.setState({\r\n            password: array,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div className=\"padding conteiner-generator\">\r\n                <h1 className=\"titles\">Generar Contraseña</h1>\r\n                <div className=\"box-generator\">\r\n                    <div>\r\n                         <p className=\"password-result\">{this.state.password}</p>\r\n                    </div>\r\n                    <div>\r\n                         <button className=\"btn-generar\" onClick={this.generar}>Generar</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n        \r\n    }\r\n}","export const helpHttp = () =>{\r\n\r\n    const customFetch = (endpoint,options) =>{\r\n        const defaultHeader = {\r\n            accept: \"application/json\",\r\n        };\r\n\r\n        const controller = new AbortController();\r\n        options.signal = controller.signal;\r\n\r\n        options.method = options.method || \"GET\";\r\n        options.headers = options.headers ? {...defaultHeader,...options.headers} :defaultHeader;\r\n\r\n        options.body = JSON.stringify(options.body) || false;\r\n        if(!options.body) delete options.body;\r\n\r\n        // abort conexion then of 3 second of none response\r\n        setTimeout(() => controller.abort(), 3000);\r\n\r\n        return fetch(endpoint,options)\r\n        .then((res) => res.ok? res.json(): Promise.reject({\r\n            err: true,\r\n            status: res.status || \"No encontrado\",\r\n            statusText: res.statusText || \"ocurrio un error\",\r\n        }))\r\n        .catch((err)=>err);\r\n\r\n    }\r\n\r\n    const get = (url, options = {}) => customFetch(url,options);\r\n    const post = (url, options = {}) => {\r\n        options.method = \"POST\";\r\n        return customFetch(url, options);\r\n    }\r\n    const put = (url, options ={}) =>{\r\n        options.method = \"PUT\";\r\n        return customFetch(url, options);\r\n    }\r\n\r\n    const del = (url, options = {}) =>{\r\n        options.method = \"DELETE\";\r\n        return customFetch(url, options);\r\n    } \r\n\r\n    return{\r\n        get,\r\n        post,\r\n        put,\r\n        del,\r\n    }\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nconst initialForm ={\r\n    id: null,\r\n    site: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n}\r\n\r\n\r\nconst DataForm = ({createData,updateData,dataToEdit,setDataToEdit}) =>{\r\n\r\n    const [form,setForm] = useState(initialForm);\r\n\r\n    useEffect(() =>{\r\n        if(dataToEdit){\r\n            setForm(dataToEdit);\r\n        }else{  \r\n            setForm(initialForm);\r\n        }\r\n    },[dataToEdit]);\r\n\r\n\r\n\r\n    //when a change occured, we called useState hooks for take the value of each input.\r\n    const handleChange = (e) =>{\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }   \r\n\r\n\r\n    const handleSumit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(!form.site || !form.username || !form.password){\r\n        alert(\"Datos incompletos\");\r\n        return;\r\n    }\r\n\r\n    if(form.id === null){\r\n        createData(form);\r\n    }else{\r\n        updateData(form);\r\n    }\r\n\r\n    handleReset();\r\n    }\r\n\r\n    const handleReset = (e) =>{\r\n        setForm(initialForm);\r\n        setDataToEdit(null);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"padding conteiner-form\">\r\n            <h1 className=\"titles\">{dataToEdit ? \"Editar\": \"Agregar\"}</h1>\r\n            <form className=\"form\" onSubmit={handleSumit}>\r\n                <input className=\"inputs\" type=\"text\" name=\"site\" placeholder=\"Site\" onChange={handleChange} value={form.site}/>\r\n                <input className=\"inputs\" type=\"text\" name=\"username\" placeholder=\"username\" onChange={handleChange} value={form.username}/>\r\n                <input className=\"inputs\" type=\"text\" name=\"password\" placeholder=\"password\" onChange={handleChange} value={form.password}/>\r\n                <section className=\"section-form-btns\">\r\n                <input className=\"form-btn\" type=\"submit\" value=\"Guardar\"/>\r\n                <input className=\"form-btn\" type=\"reset\" value=\"Resetear\" onClick={handleReset}/>\r\n                </section>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataForm","import React from \"react\";\r\n\r\nconst DataTableRow = ({el, setDataToEdit, deleteData}) =>{\r\n    let {id,site,username,password} = el;\r\n\r\n    return(\r\n        <tr>\r\n            <td>{site}</td>\r\n            <td>{username}</td>\r\n            <td>{password}</td>\r\n            <td className=\"table-btns\">\r\n                <button onClick={()=> setDataToEdit(el)}>Editar</button>\r\n                <button onClick={()=> deleteData(id)}>Eliminar</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DataTableRow","import React from \"react\";\r\nimport DataTableRow from \"./DataTableRow\";\r\n\r\n\r\nconst DataTable = ({data, setDataToEdit, deleteData}) =>{\r\n\r\n    return(\r\n        <div className=\"padding \">\r\n            <h1 className=\"titles\">Mis Sitios</h1>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Sitio</th>\r\n                        <th>Username</th>\r\n                        <th>Password</th>\r\n                        <th>Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {data.length > 0 ? (data.map((el) => <DataTableRow key={el.id} el={el} setDataToEdit={setDataToEdit} deleteData={deleteData}/>)): (<tr><td colSpan=\"4\">Sin Datos</td></tr>)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataTable","import React from \"react\";\r\nimport \"./Loader.css\"\r\n\r\n\r\nconst Loader = () =>{\r\n    return(\r\n        <div className=\"lds-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Loader","import React from \"react\";\r\n\r\n\r\nconst Message = ({msg, bgColor}) =>{\r\n    \r\n    let styles = {\r\n        padding: \"1rem\",\r\n        marginBottom: \"1rem\",\r\n        textAling: \"center\",\r\n        color: \"#fff\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: bgColor,\r\n    }\r\n    \r\n    return(\r\n        <div style={styles}>\r\n            <h2>{msg}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message","import React, { useEffect, useState } from \"react\"\r\nimport { helpHttp } from \"../helpers/helpHttp\";\r\nimport DataForm from \"./DataForm\"\r\nimport DataTable from \"./DataTable\";\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\n\r\nconst RandomPassword = () =>{\r\n\r\n    const [db, setDb] = useState(null);\r\n    const [dataToEdit, setDataToEdit] = useState(null);\r\n    const [error,setError] = useState(null);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    let api = helpHttp();\r\n    let url = \"http://localhost:5000/data\"\r\n\r\n    useEffect(() =>{\r\n        setLoading(true);\r\n        helpHttp().get(url).then((res) =>{\r\n            if(!res.err){\r\n                setDb(res);\r\n                setError(null);\r\n            }else{\r\n                setDb(null);\r\n                setError(res);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    }, [url]);\r\n\r\n\r\n    const createData = (data) =>{\r\n\r\n        data.id = Date.now();\r\n        let options = {body:data, headers: {\"content-type\":\"application/json\"},};\r\n\r\n        api.post(url, options).then((res)=>{\r\n            if(!res.err){\r\n                setDb([...db, res]);\r\n\r\n            }else{\r\n                setError(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    const updateData = (data) =>{\r\n        let endPoint = `${url}/${data.id}`;\r\n\r\n        let options = {body:data, headers: {\"content-type\":\"application/json\"},\r\n        };\r\n\r\n        api.put(endPoint,options).then((res)=>{\r\n\r\n            if(!res.err){\r\n                let newData = db.map((el)=> (el.id === data.id ? data: el));\r\n                setDb(newData);\r\n            }else{\r\n                setError(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) =>{\r\n        let isDelete = window.confirm(`\r\n        ¿Estas seguro que quieres eliminar la informacion de este sitio?`);\r\n\r\n        if(isDelete){\r\n            let endpoint = `${url}/${id}`;\r\n            let options = {\r\n                headers: {\"content-type\": \"application/json\"},\r\n            }\r\n\r\n            api.del(endpoint,options).then(res=>{\r\n\r\n                if(!res.err){\r\n                    let newData = db.filter(el => el.id !== id);\r\n                    setDb(newData);\r\n                }else{\r\n                    setError(res);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <DataForm \r\n        createData={createData}\r\n        updateData={updateData}\r\n        dataToEdit={dataToEdit}\r\n        setDataToEdit={setDataToEdit}/>\r\n        {loading && <Loader />}\r\n        {error && (<Message msg={`Error ${error.status}: ${error.statusText}`} bgColor=\"#dc3545\"/>)}\r\n       {db && <DataTable data={db}\r\n        setDataToEdit={setDataToEdit}\r\n        deleteData={deleteData}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RandomPassword","import './App.css';\nimport Nav from './components/Nav';\nimport PasswordGenerator from './components/PasswordGenerator';\nimport RandomPassword from './components/RandomPassword';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Nav />\n        <div className=\"conteiner\">\n        <PasswordGenerator />\n        <RandomPassword />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}